name: Fantrax Auction Monitor

on:
  schedule:
    # Run every 2 hours from 8AM to 10PM CDT
    - cron: '0 13,15,17,19,21,23,1,3 * * *'  # UTC times
  workflow_dispatch:  # Allows manual trigger

jobs:
  scrape-fantrax:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
    
    - name: Install Python dependencies
      run: |
        pip install selenium webdriver-manager requests
    
    - name: Run Fantrax scraper
      env:
        FANTRAX_USERNAME: ${{ secrets.FANTRAX_USERNAME }}
        FANTRAX_PASSWORD: ${{ secrets.FANTRAX_PASSWORD }}
        SMTP_SERVER: smtp.gmail.com
        SMTP_PORT: 587
        SENDER_EMAIL: ${{ secrets.EMAIL_USERNAME }}
        SENDER_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
        EMAIL_SUBJECT: "Current Fantrax Auctions - Will Process at "
      run: |
        echo "Starting scraper with debug info..."
        echo "Python version: $(python --version)"
        echo "Chrome version: $(google-chrome --version)"
        echo "Environment check:"
        echo "FANTRAX_USERNAME is set: $([[ -n "$FANTRAX_USERNAME" ]] && echo "Yes" || echo "No")"
        echo "FANTRAX_PASSWORD is set: $([[ -n "$FANTRAX_PASSWORD" ]] && echo "Yes" || echo "No")"
        echo "GITHUB_ACTIONS is set: $GITHUB_ACTIONS"
        echo ""
        echo "Running script..."
        python fantrax_scraper.py || echo "Script failed with exit code $?"
        
        echo "Running email sender..."
        echo "Checking email_summary.txt contents:"
        if [ -f "email_summary.txt" ]; then
            echo "File exists. First 10 lines:"
            head -10 email_summary.txt
            echo "File length: $(wc -c < email_summary.txt) characters"
        else
            echo "email_summary.txt NOT FOUND"
        fi
        echo ""
        python send_email.py || echo "Email sending failed with exit code $?"
    
    - name: Upload results as artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: auction-results-${{ github.run_number }}
        path: |
          auction_players.json
          email_summary.txt
